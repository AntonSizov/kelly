#!/bin/bash

UrlFmt="http://{{HOST}}:{{PORT}}/cgi-bin/sendsms?username={{USERNAME}}&password={{PASSWORD}}&to={{TO}}&text={{BODY}}&dlr-mask={{DRLMASK}}"
Host=localhost
Port=13003
Username=test
Password=test
DlrMask=0
Count=0
Same=0
Length=160
Networks=(37529 37533 37544 37525)

function usage() {
   echo "Usage: $(basename $0) <-c Count> [-b Body] [-l Length] [-s] [-d Dlr] [-H Host] [-P Port] [-u User] [-p Password]"
   echo "Where -c Message Count. Mandatory option"
   echo "      -b Message Body. By default message body is randomly generated"
   echo "      -l Randomly generated message body Length. Default is '$Length'"
   echo "      -s Same randomly generated body for all messages"
   echo "      -d Delivery report mask. Default is '$DlrMask'"
   echo "      -H Kannel's bearerbox-host Host name. Default is '$Host'"
   echo "      -P Kannel's smsbox-port Port number. Default is '$Port'"
   echo "      -u Kannel's sendsms-user User name. Default is '$Username'"
   echo "      -p Kannel's sendsms-user Password. Default is '$Password'"
   echo "      -q Quiet mode"
   echo "      -h Help"
   echo
   echo "Delivery report mask is the addition of the delivery report numbers:"
   echo "  1: delivery success"
   echo "  2: delivery failure"
   echo "  4: message buffered"
   echo "  8: smsc submit"
   echo " 16: smsc reject"
   echo "Example: 31 = 1+2+4+8+16"
}

# generate random $Length chars sequence.
function generate_random_body() {
	cat /dev/urandom | tr -dc '0-9a-zA-Z' | head -c $Length
}

# parse arguments.
while getopts c:b:l:sd:H:P:u:p:qh opt; do
    case "$opt" in
		c) Count="$OPTARG";;
		b) Body="$OPTARG"; Same=1;;
		l) Length="$OPTARG";;
		s) Same=1;;
		d) DlrMask="$OPTARG";;
		H) Host="$OPTARG";;
		P) Port="$OPTARG";;
		u) Username="$OPTARG";;
		p) Password="$OPTARG";;
		q) Quiet="-q";;
		\? | h) usage; exit 0;
    esac
done

# check that the mandatory option is set.
if [ $Count -eq 0 ]; then
	usage
	exit 1
fi

# generate random body used for all messages.
if [ $Same -eq 1 ] && [ -z "$Body" ]; then
	Body=$(generate_random_body)
fi

Index=1
LastNetworkIndex=$((${#Networks[@]}-1))
while [ $Index -lt $Count ] || [ $Index -eq $Count ]; do
	if [ -z $Quiet ]; then
		printf "#%s\n" $Index
	fi

	## select random network.
	RandomNetworkIndex=$(shuf -i 0-$LastNetworkIndex -n 1)
	Network=${Networks[$RandomNetworkIndex]}
	## select random 7 digits number.
	Number=$(shuf -i 1111111-9999999 -n 1)
	## if not the same message, then generate it every time.
	if [ $Same -eq 0 ]; then
		Body=$(generate_random_body)
	fi

	## build To
	To="%2B$Network$Number"

	## build sed patterns list.
	Patterns="s/{{HOST}}/$Host/;s/{{PORT}}/$Port/;s/{{USERNAME}}/$Username/;s/{{PASSWORD}}/$Password/;s/{{TO}}/$To/;s/{{BODY}}/$Body/;s/{{DRLMASK}}/$DlrMask/"
	## build the url.
	Url=$(echo $UrlFmt | sed -e $Patterns)
	wget $Url $Quiet -O /dev/null
	if [ -z $Quiet ]; then
		echo; echo
	fi

	Index=$(($Index + 1))
done

exit 0
