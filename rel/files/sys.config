[
{lager, [
	{handlers, [
		{lager_console_backend, debug},
		{lager_file_backend, [
			{"log/debug.log", debug, 10485760, "$D0", 5},
			{"log/error.log", error, 10485760, "$D0", 5},
			{"log/console.log", info, 10485760, "$D0", 5}
		]}
	]},
	{crash_log, "log/crash.log"},
	{crash_log_msg_size, 65536},
	{crash_log_size, 10485760},
	{crash_log_date, "$D0"},
	{crash_log_count, 5},
	{error_logger_redirect, true}
]},
{snmp, [
	{manager,[
		{config, [
			{dir, "manager/conf/"},
			{db_dir, "manager/db/"}
		]},
		{mibs, ["mib/JUST-MIB"]}
	]}
]},
{sasl, [
	{sasl_error_logger, {file, "log/sasl-error.log"}},
	{errlog_type, error},
	{error_logger_mf_dir, "log/sasl"},      % Log directory
	{error_logger_mf_maxbytes, 10485760},   % 10 MB max file size
	{error_logger_mf_maxfiles, 5}           % 5 files max
]},
{kv_storage, [
	{plugins, [
		kyte_kv_storage_plugin
		%% riak_kv_storage_plugin,
        %% mongodb_kv_storage_plugin
		%% postgresql_kv_storage_plugin,
		%% mysql_kv_storage_plugin,
        %% cassandra_kv_storage_plugin
	]}
]},
{kyte_kv_storage_plugin, [
	{pool_size, 8}
]},
{riak_kv_storage_plugin, [
	%% riak_kv_storage launches the pooler itself.
	%% these settings are used instead of the pooler's.
	{pool_max_count, 30},
	{pool_init_count, 5},
	{host, "localhost"},
	{port, 8100},
	{auto_reconnect, true}
]},
{mongodb_kv_storage_plugin, [
	{conn_props, {single, {localhost, 27017}}},
	%% {conn_props, {replica_set, {<<"rs">>, [{localhost, 27017}, {localhost, 27018}]}}},
	{dbname, kellydb},
	{pool_size, 5}
]},
{postgresql_kv_storage_plugin, [
	%% postgresql_kv_storage launches the epgsql_pool itself.
	%% these settings are used instead of the pooler's.
	{host, "localhost"},
	{port, 5432},
	{pool_size, 30},
	{database, "kelly"},
	{username, "test"},
	{password, "test"}
]},
{mysql_kv_storage_plugin, [
	{host, "localhost"},
	{port, 3306},
	{pool_size, 30},
	{database, "kelly"},
	{username, "test"},
	{password, "test"}
]},
{cassandra_kv_storage, [
	{host, "localhost"},
	{port, 9160},
	{keyspace, "kelly"}
]},
{k_storage, [
	{daily_parts_count, 4},
	{name_fmt, "period_~p_~p"},
	{manifest_fmt, "data/sendings.d/~p.manifest"},

	{kv_storage, [
		{plugin, kyte_kv_storage_plugin},
		{options, [
			{data_root, "data/sendings.d"},
			{name_suffix, ".kch"},
			{parts, 2},
			{key_codec, etf},
			{val_codec, etf}
		]}

		%% {plugin, mongodb_kv_storage_plugin},
		%% {options, []}

		%% {plugin, riak_kv_storage_plugin},
		%% {options, []}

		%% {plugin, postgresql_kv_storage_plugin},
		%% {options, []}

		%% {plugin, mysql_kv_storage_plugin},
		%% {options, []}

		%% {plugin, cassandra_kv_storage_plugin},
		%% {options, []}
	]}
]},
{k_aaa, [
	{customers, "customers"},
	{sid_to_cid, "sid_to_cid"},

	{kv_storage, [
		{plugin, kyte_kv_storage_plugin},
		{options, [
			{data_root, "data"},
			{name_suffix, ".kch"},
			{parts, single},
			{key_codec, etfz},
			{val_codec, etfz}
		]}

		%% {plugin, mongodb_kv_storage_plugin},
		%% {options, []}

		%% {plugin, riak_kv_storage_plugin},
		%% {options, []}

		%% {plugin, postgresql_kv_storage_plugin},
		%% {options, []}

		%% {plugin, mysql_kv_storage_plugin},
		%% {options, []}

		%% {plugin, cassandra_kv_storage_plugin},
		%% {options, []}
	]}
]},
{k_config, [
	{gateways, "gateways"},
	{networks, "networks"},
	{providers, "providers"},

	{kv_storage, [
		{plugin, kyte_kv_storage_plugin},
		{options, [
			{data_root, "data"},
			{name_suffix, ".kch"},
			{parts, single},
			{key_codec, etfz},
			{val_codec, etfz}
		]}

		%% {plugin, mongodb_kv_storage_plugin},
		%% {options, []}

		%% {plugin, riak_kv_storage_plugin},
		%% {options, []}

		%% {plugin, mysql_kv_storage_plugin},
		%% {options, []}

		%% {plugin, postgresql_kv_storage_plugin},
		%% {options, []}

		%% {plugin, cassandra_kv_storage_plugin},
		%% {options, []}
	]}
]},
% default amqp props
{rmql, [
	{amqp_props, [
			{host, "127.0.0.1"},
			{port, 5672},
			{vhost, <<"/">>},
			{username, <<"guest">>},
			{password, <<"guest">>},
			{qos, 100}
	]}
]},
{k_handlers, [
	{k_k1api_auth_handler, [
		{queue, <<"pmm.k1api.auth_request">>},
		{handler, k_k1api_auth_handler},
		{declare_queue, false},
		{rmq_qos, 1}
	]},
	{k_k1api_delivery_status_req_handler, [
		{queue, <<"pmm.k1api.delivery_status_request">>},
		{handler, k_k1api_delivery_status_req_handler},
		{declare_queue, false},
		{rmq_qos, 1}
	]},
	{k_k1api_retrieve_sms_req_handler, [
		{queue, <<"pmm.k1api.retrieve_sms_request">>},
		{handler, k_k1api_retrieve_sms_req_handler},
		{declare_queue, false},
		{rmq_qos, 1}
	]},
	{k_amqp_k1api_sms_request, [
		{queue, <<"pmm.k1api.sms_request">>},
		{handler, k_sms_request_handler},
		{rmq_qos, 1000}
	]},
	{k_amqp_bind_request, [
		{queue, <<"pmm.mmwl.funnel_auth">>},
		{handler, k_bind_request_handler},
		{rmq_qos, 1}
	]},
	{k_amqp_sms_request, [
		{queue, <<"pmm.mmwl.funnel_batches">>},
		{handler, k_sms_request_handler},
		{rmq_qos, 1000}
	]},
	{k_amqp_sms_response, [
		{queue, <<"pmm.mmwl.response.sms">>},
		{handler, k_sms_response_handler},
		{rmq_qos, 1000}
	]},
	{k_amqp_receipt_batch, [
		{queue, <<"pmm.mmwl.receipt.sms">>},
		{handler, k_receipt_batch_handler},
		{rmq_qos, 1000}
	]},
	{k_amqp_funnel_events, [
		{queue, <<"pmm.mmwl.funnel_events">>},
		{handler, k_funnel_events_handler},
		{rmq_qos, 1000}
	]},
	{k_amqp_incoming_sms, [
		{queue, <<"pmm.mmwl.incoming.sms">>},
		{handler, k_incoming_sms_handler},
		{rmq_qos, 1000}
	]}
]},
{k_mailbox, [
	{delay_rescan_pendings, 3000},
	{no_ack_timeout, 10000},
	{restore_connection_timeout, 60000},
	{rmq_qos, 1000}
]}
].
